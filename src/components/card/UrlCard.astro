---
const {url} = Astro.props;

const w=await(await fetch(url)).text();
const match=[...w.matchAll(/(og|twitter):(?<type>title|description|image)".*? content="(?<content>.*?)"/g)];

const metadata=match.reduce(
  (a,x)=>(
    a[x!.groups!.type]=x!.groups!.content,a
  ),
  {
    "title": (w.match(/<title>(.*?)<\/title>/)||"")[1], 
    "description": (w.match(/name="description".*?content="(.*?)"/)||"")[1] || "", 
    "image":""
  } as Record<string, string>
);
---
<div class="urlCard">
  <a href={url} target="_blank">
      <div class="sm:flex flex-col sm:flex-row flex-nowrap items-center">
        <div class="w-full sm:w-[150px] h-[150px] overflow-hidden">
          <img src={metadata["image"]||"https://helkun.dev/no-image.svg"} alt={metadata["description"]}>
        </div>
        <div class="p-4">
          <p class="title">{metadata["title"]}</p>
          <p class="description">
            {metadata["description"].length > 30 ? metadata["description"].substring(0, 30) + "â€¦" : metadata["description"]}
          </p>
        </div>
      </div>
  </a>
</div>