---
import BaseLayout from '@/layouts/BaseLayout.astro';
import BlogPostCard from '@/components/blog/BlogPostCard.astro';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('blog');
const allTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

export async function getStaticPaths() {
    const allPosts = await getCollection('blog');
    const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

    return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
        params: { tag },
        props: { 
            posts: filteredPosts.sort(
	            (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
            )
        },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const title= `「# ${tag}」の記事 - へるぶろぐ`;
---
<BaseLayout SITE_TITLE={title} SITE_DESCRIPTION="へるくんのブログ">
	<h1 class="font-bold text-4xl mb-4">へるぶろぐ</h1>
    <div  class="flex mb-2">
		{allTags.map((alltag) => <p class="mx-1"><a href={`/blog/${alltag}`} class="underline hover:text-blue-500 hover:dark:text-blue-400">#{alltag}<a/></p>)}
	</div>
	<p class="mb-4">「#{tag}」記事一覧です</p>
    <section>
		<ul class="flex flex-wrap m-0 p-0 gap-8 list-none mdmax:gap-2 items-stretch">
			{posts.map((post) => <BlogPostCard post={post} />)}
		</ul>
	</section>
</BaseLayout>